{
    "version": "8.3.0_2",
    "description": "Command line tool and library for transferring data with URLs",
    "homepage": "https://curl.se/",
    "license": "MIT",
    "architecture": {
        "64bit": {
            "url": "https://curl.se/windows/dl-8.3.0_2/curl-8.3.0_2-win64-mingw.tar.xz",
            "hash": "57dbfbab46a512ad6022afbb447acfd3706933e73ed44df34cf8fb5e92b2de6a",
            "extract_dir": "curl-8.3.0_2-win64-mingw"
        },
        "32bit": {
            "url": "https://curl.se/windows/dl-8.3.0_2/curl-8.3.0_2-win32-mingw.tar.xz",
            "hash": "c66a9408f993d706c97ff76ed2bc3546120aef996818b47f55931979c1692d0f",
            "extract_dir": "curl-8.3.0_2-win32-mingw"
        },
        "arm64": {
            "url": "https://curl.se/windows/dl-8.3.0_2/curl-8.3.0_2-win64a-mingw.tar.xz",
            "hash": "ce0f574c723382d498f88d8e4a4e0b77b8f076a1d9b7943cbd1e2111990dd22f",
            "extract_dir": "curl-8.3.0_2-win64a-mingw"
        }
    },
    "bin": "bin\\curl.exe",
    "checkver": {
        "url": "https://curl.se/windows/",
        "regex": "Build<\\/b>:\\s+([\\d._]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win64-mingw.tar.xz",
                "extract_dir": "curl-$version-win64-mingw"
            },
            "32bit": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win32-mingw.tar.xz",
                "extract_dir": "curl-$version-win32-mingw"
            },
            "arm64": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win64a-mingw.tar.xz",
                "extract_dir": "curl-$version-win64a-mingw"
            }
        },
        "hash": {
            "url": "$baseurl/hashes.txt",
            "regex": "SHA2-256\\($basename\\)=\\s+$sha256"
        }
    },
    "post_install": [
        "if (Test-Path \"$persist_dir\\curl-ca-bundle.crt\") {",
        "   $diff = Compare-Object $(Get-Content \"$persist_dir\\curl-ca-bundle.crt\") $(Get-Content \"$dir\\bin\\curl-ca-bundle.crt\")",
        "   if (!($null -eq $diff)) {",
        "       $resolved = $false",
        "       $choiceFromFile = $false",
        "       if (Test-Path \"$persist_dir\\.post_install_choice\") {",
        "           $choiceFromFile = $true",
        "           if ((Get-Content \"$persist_dir\\.post_install_choice\").Length -eq 0) {",
        "               $choice = 0",
        "           }",
        "           else {",
        "               $character = Get-Content \"$persist_dir\\.post_install_choice\" -First 1 | ForEach-Object { $_.Substring(0,1) }",
        "               if ($character -ieq \"K\") { $choice = 0 }",
        "               elseif ($character -ieq \"O\") { $choice = 1 }",
        "               elseif ($character -ieq \"E\") { $choice = 2 }",
        "               else {",
        "                   Write-Output \"Invalid choice in $persist_dir\\.post_install_choice\"",
        "                   Write-Output \"Valid choices are: K, O, E\"",
        "                   Write-Output \"Defaulting to Keep persisted certificates\"",
        "                   $choice = 0",
        "               }",
        "           }",
        "       }",
        "       $optKeep = New-Object System.Management.Automation.Host.ChoiceDescription \"&Keep persisted certificates\",\"This preserves all manually added CAs.\"",
        "       $optOverwrite = New-Object System.Management.Automation.Host.ChoiceDescription \"&Overwrite with new certificates\",\"Overwrite with the default CAs distributed with the new version of curl.\"",
        "       $optExam = New-Object System.Management.Automation.Host.ChoiceDescription \"&Examine difference\",\"Inspect the differences between the existing and new CAs.\"",
        "       $options = [System.Management.Automation.Host.ChoiceDescription[]]($optKeep, $optOverwrite, $optExam)",
        "       while (!$resolved) {",
        "           if (-not $choiceFromFile) {",
        "               $choice = $Host.UI.PromptForChoice(\"Detected change in curl-ca-bundle.crt\", $null, $options, 0)",
        "           }",
        "           switch ($choice) {",
        "               0 { Move-Item \"$dir\\bin\\curl-ca-bundle.crt\" \"$dir\\bin\\curl-ca-bundle.default.crt\"; Copy-Item \"$persist_dir\\curl-ca-bundle.crt\" \"$dir\\bin\\curl-ca-bundle.crt\" ; $resolved = $true; break }",
        "               1 { $resolved = $true; break }",
        "               2 { Write-Output \"<=: persisted certificates`n=>: new certificates\"; $diff | Out-String | Write-Output ; break }",
        "           }",
        "       }",
        "   }",
        "}"
    ],
    "pre_uninstall": [
        "# Persist manually curl-ca-bundle.crt",
        "if (Test-Path \"$dir\\bin\\curl-ca-bundle.crt\") {",
        "    ensure \"$persist_dir\" | Out-Null",
        "    Copy-Item \"$dir\\bin\\curl-ca-bundle.crt\" \"$persist_dir\\curl-ca-bundle.crt\" -Force -Recurse",
        "}"
    ],
    "notes": [
        "If you need to modify the CA bundle, you can put the modified curl-ca-bundle.crt in the persist directory.",
        "This often defaults to $HOME\\Scoop\\persist\\curl\\",
        "When installing or upgrading, if the CA bundle has changed, you will be prompted to keep the persisted certificates, overwrite with the new certificates, or examine the differences.",
        "To skip the prompt, you can create a file named .post_install_choice in the persist directory with the first character being K, O, or E."
    ]
}
