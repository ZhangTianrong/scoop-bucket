{
    "version": "8.1.0_1",
    "description": "Command line tool and library for transferring data with URLs",
    "homepage": "https://curl.se/",
    "license": "MIT",
    "architecture": {
        "64bit": {
            "url": "https://curl.se/windows/dl-8.1.0_1/curl-8.1.0_1-win64-mingw.tar.xz",
            "hash": "20d3522aafbb123b2cc46ca058d617b1f115776964d1e39333ddfd3937c857ff",
            "extract_dir": "curl-8.1.0_1-win64-mingw"
        },
        "32bit": {
            "url": "https://curl.se/windows/dl-8.1.0_1/curl-8.1.0_1-win32-mingw.tar.xz",
            "hash": "bb58f57aec2d44e1147ba465221ee7a05b4bc0e3add4d2b8623e53c3f98206b0",
            "extract_dir": "curl-8.1.0_1-win32-mingw"
        },
        "arm64": {
            "url": "https://curl.se/windows/dl-8.1.0_1/curl-8.1.0_1-win64a-mingw.tar.xz",
            "hash": "c821c620ab0722c4fb45f18ededc3fb59079eb6135bfad4f84453e7d9eb19ac2",
            "extract_dir": "curl-8.1.0_1-win64a-mingw"
        }
    },
    "bin": "bin\\curl.exe",
    "checkver": {
        "url": "https://curl.se/windows/",
        "regex": "Build<\\/b>:\\s+([\\d._]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win64-mingw.tar.xz",
                "extract_dir": "curl-$version-win64-mingw"
            },
            "32bit": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win32-mingw.tar.xz",
                "extract_dir": "curl-$version-win32-mingw"
            },
            "arm64": {
                "url": "https://curl.se/windows/dl-$version/curl-$version-win64a-mingw.tar.xz",
                "extract_dir": "curl-$version-win64a-mingw"
            }
        },
        "hash": {
            "url": "$baseurl/hashes.txt",
            "regex": "SHA2-256\\($basename\\)=\\s+$sha256"
        }
    },
    "post_install": [
        "if (Test-Path \"$persist_dir\\curl-ca-bundle.crt\") {",
        "	$diff = Compare-Object $(Get-Content \"$persist_dir\\curl-ca-bundle.crt\") $(Get-Content \"$dir\\bin\\curl-ca-bundle.crt\")",
        "	if (!($null -eq $diff)) {",
        "		$resolved = $false",
        "       $optKeep = New-Object System.Management.Automation.Host.ChoiceDescription \"&Keep persisted certificates\",\"This preserves all manually added CAs.\"",
        "       $optOverwrite = New-Object System.Management.Automation.Host.ChoiceDescription \"&Overwrite with new certificates\",\"Overwrite with the default CAs distributed with the new version of curl.\"",
        "       $optExam = New-Object System.Management.Automation.Host.ChoiceDescription \"&Examine difference\",\"Inspect the differences between the existing and new CAs.\"",
        "		$options = [System.Management.Automation.Host.ChoiceDescription[]]($optKeep, $optOverwrite, $optExam)",
        "		while (!$resolved) {",
        "			$choice = $Host.UI.PromptForChoice(\"Detected change in curl-ca-bundle.crt\", $null, $options, 0)",
        "			switch ($choice) {",
        "				0 { Copy-Item \"$persist_dir\\curl-ca-bundle.crt\" \"$dir\\bin\\curl-ca-bundle.crt\" ; $resolved = $true; break }",
        "				1 { $resolved = $true; break }",
        "				2 { Write-Output \"<=: persisted certificates`n=>: new certificates\"; $diff | Out-String | Write-Output ; break }",
        "			}",
        "		}",
        "	}",
        "}"
    ],
    "pre_uninstall": [
        "# Persist manually curl-ca-bundle.crt",
        "if (Test-Path \"$dir\\bin\\curl-ca-bundle.crt\") {",
        "    ensure \"$persist_dir\" | Out-Null",
        "    Copy-Item \"$dir\\bin\\curl-ca-bundle.crt\" \"$persist_dir\\\" -Force -Recurse",
        "}"
    ]
}
